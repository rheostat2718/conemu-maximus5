NAME = ver_c0
SRCS = pe.cpp

USERLIBS = 
ENCFLAGS = -finput-charset=utf-8

#DEBUG = 1

#The following variables can be set by the user:
#
#NAME - the name of the plugin (project name|dll name).
#
#EXT - extension of the plugin executable (dll by default).
#
#ADDOUTDIR - you can set it to /dir if the target folder for the plugin
#            is a folder inside the default target folder.
#            This is used in multiarc for building *.fmt.
#
#USERCPP - user defined switches for the compiler (added after the default
#          ones).
#
#USERLIBS - specify additional libs you need in the form -llib
#           (added after the default ones).
#
#USERLIBSFIRST - same as USERLIBS but added before the default libs
#                (libraries order is important for gcc).
#
#USERRC - user defined switches for windres
#
#NEEDENTRY - set if you want to disable the -nostartfiles link flag
#
#NEEDDEFLIB - set if you want to disable the -nodefaultlibs link flag
#
#EXCLUDECRT - set if you do not want to link with common/crt lib.
#
#SRCS - a list of the *.cpp source files.
#
#DOCS - a list of additional files that need to copied to the target folder.
#
#WIDE - set for a unicode build
#


WIDE = 1
DIRSURF = W
ifeq ($(DIRBIT),64)
  BITDEF = -D _WIN64 -D WIN64
  BITNAME = 64
  EXT = t64
else
  BITDEF = 
  BITNAME = 
  EXT = t32
endif
RCWIDE = -D UNICODE -D _UNICODE -D verc0_EXPORTS $(BITDEF)
CXXWIDE = -D _WIN32_WINNT=0x0500 -D WINVER=0x0500 -D UNICODE -D _UNICODE -D verc0_EXPORTS $(BITDEF)
CCWIDE = -D _WIN32_WINNT=0x0500 -D WINVER=0x0500 -D UNICODE -D _UNICODE -D verc0_EXPORTS $(BITDEF)


#ifndef DEBUG
DEBUGFLAGS=-Os -DNDEBUG
DEBUGLINKFLAGS=-s
#else
DEBUGFLAGS=-g -D_DEBUG
DEBUGLINKFLAGS=
#endif                   


OBJDIR = ./gcc
#REOBJDIR = \.\/gcc
DLLDIR = ./
COMMON = 
COMINC = $(COMMON)
DLLNAME = $(NAME).$(EXT)
DLLFULLNAME = $(DLLDIR)/$(DLLNAME)
DEF = export.gcc.def
#RC_NAME = PicViewWrapper.rc
#RES = $(OBJDIR)/$(NAME).res.o

NOSTART = -nostartfiles
ifdef NEEDENTRY
NOSTART = 
endif

#NODEFLIBS = -nodefaultlibs
ifdef NEEDDEFLIB
NODEFLIBS = 
endif

COMMONLIB = -L $(COMMON) 
ifdef EXCLUDECRT
COMMONLIB = 
endif

CXX = g++
CC = gcc
DLLTOOL = dlltool
RM = rm -f
CP = cp -f
M4 = m4 -P
MV = mv -f
MKDIR = mkdir -p
WINDRES = windres
AR = ar
RANLIB = ranlib
CXXFLAGS = $(ENCFLAGS) $(DEBUGFLAGS) -I $(COMMON) -I $(COMINC) -Wall -Os -funsigned-char -fomit-frame-pointer -fstrict-aliasing -fno-rtti -fno-exceptions $(CXXWIDE) $(USERCPP)
CCFLAGS = $(DEBUGFLAGS) -I $(COMMON) -I $(COMINC) -Wall -Os -funsigned-char -fomit-frame-pointer -fstrict-aliasing -fno-exceptions $(CCWIDE) $(USERCPP)
LNKFLAGS = -mdll $(DEBUGLINKFLAGS) $(NOSTART) $(NODEFLIBS) -lgcc $(USERLIBSFIRST) $(COMMONLIB) -lkernel32 -ladvapi32 -lshell32 $(USERLIBS)
RCFLAGS = -I $(COMINC) $(RCWIDE) $(USERRC)

OBJS = $(patsubst %.c,$(OBJDIR)/%.o,$(filter %.c,$(SRCS))) $(patsubst %.cpp,$(OBJDIR)/%.o,$(filter %.cpp,$(SRCS))) 
#$(RES)
MAP = $(patsubst %.$(EXT),%.map,$(DLLFULLNAME))


all: $(DLLFULLNAME)


$(OBJDIR)/%.o: %.c
	@echo compiling $<
	@$(MKDIR) -p $(@D)
	@$(CC) $(CCFLAGS) -c -o $@ $<

$(OBJDIR)/%.o: %.cpp
	@echo compiling $<
	@$(MKDIR) -p $(@D)
	@$(CXX) $(CXXFLAGS) -c -o $@ $<

#$(RES): $(RC_NAME)
#	@echo compiling resources $<
#	@$(MKDIR) -p $(@D)
#	@$(WINDRES) $(RCFLAGS) -i $< -o $@

$(DLLFULLNAME): $(OBJS) $(DEF)
	@echo linking $@
	@$(MKDIR) -p $(@D)
	@$(CXX) -mdll -o $(DLLNAME) -Xlinker --base-file -Xlinker $(DLLNAME).base $(OBJS) $(LNKFLAGS)
	@$(DLLTOOL) --dllname $(DLLNAME) --base-file $(DLLNAME).base --output-exp $(DLLNAME).exp --def $(DEF)
	@$(CXX) -mdll  -o $(DLLNAME) $(OBJS) $(DLLNAME).exp $(LNKFLAGS) -Xlinker -Map -Xlinker $(MAP)
#	@$(MV) $(DLLNAME) $(DLLDIR)
	@$(RM) $(DLLNAME).base
	@$(RM) $(DLLNAME).exp
ifdef DOCS
	@$(CP) $(DOCS) $(DLLDIR)
endif

ifndef DISABLEAUTODEPS
-include $(DEPS)
endif
