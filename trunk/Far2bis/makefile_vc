#The following variables can be set by the user:
#
#DEBUG - set if a debug build is needed
#
#LINK_ULINK - set if you want to use ulink for linking
#
#VC - set Visual C++ version (VC=8 - 2005, VC=9 - 2008, VC=10 - 2010) (we try to autodetect if not set)
#
#AMD64 - set for x64 build
#  or
#CPU=AMD64 - for x64 build
#
#IA64 - set for IA64 build
#  or
#CPU=IA64 - for IA64 build
#
#(we try to autodetect if not set)
#
#
#FARSYSLOG - for syslog
#
#DISABLE_WOW64_HOOK - set to disable the wow64 hook
#
#DEFFILE - name of user file to include
#
#EXCEPTION_TEST - set to generate Ctrl-Alt-Apps dialog in release
#
#NO_RELEASE_PDB - set to disable pdb generation for release
#
#ASM_LISTING - set to enable assembly, machine code and source listing generation

.SILENT:

#include for user defines if needed
!ifdef DEFFILE
!include $(DEFFILE)
!endif

!if defined(AMD64) || "$(CPU)" == "AMD64" || "$(PLATFORM)" == "X64" || "$(PLATFORM)" == "x64"
!undef CPU
AMD64=1
DIRBIT=64
!elseif defined(IA64) || "$(CPU)" == "IA64" || "$(PLATFORM)" == "Itanium"
!undef CPU
IA64=1
DIRBIT=IA64
!else
X86=1
DIRBIT=32
!endif

!if !defined(VC) && defined(_NMAKE_VER)

!if "$(_NMAKE_VER)">"9"
VC=9
!elseif "$(_NMAKE_VER)">"8"
VC=8
!elseif "$(_NMAKE_VER)">"10"
VC=10
!else
#default
VC=9
!endif
!endif

!ifndef DEBUG
DIRNAME=Release
USEDEBUG=NDEBUG
!else
DIRNAME=Debug
USEDEBUG=_DEBUG
!endif

DEPFILE=bootstrap\far.vc.dep

OUTDIR=$(DIRNAME).$(DIRBIT).vc

FARINCLUDE=Include

LINK=link.exe
ULINK=ulink.exe
M4=tools\m4 -P -DFARBIT=$(DIRBIT)
GAWK=tools\gawk

INTDIR=$(OUTDIR)\obj
!ifdef FARSYSLOG
INTDIR=$(INTDIR)log
!endif

CODDIR=$(OUTDIR)\cod

!ifndef LINK_ULINK
DEF_FILE = ".\far.def"
!else
DEF_FILE = ".\far_u.def"
!endif

RES_FILE = "$(INTDIR)\far.res"

PCH_FILE = "$(INTDIR)\headers.pch"

LINK_OBJS = \
	"$(INTDIR)\cache.obj" \
	"$(INTDIR)\cddrv.obj" \
	"$(INTDIR)\CFileMask.obj" \
	"$(INTDIR)\chgmmode.obj" \
	"$(INTDIR)\chgprior.obj" \
	"$(INTDIR)\clipboard.obj" \
	"$(INTDIR)\cmdline.obj" \
	"$(INTDIR)\codepage.obj" \
	"$(INTDIR)\config.obj" \
	"$(INTDIR)\console.obj" \
	"$(INTDIR)\constitle.obj" \
	"$(INTDIR)\copy.obj" \
	"$(INTDIR)\ctrlobj.obj" \
	"$(INTDIR)\cvtname.obj" \
	"$(INTDIR)\datetime.obj" \
	"$(INTDIR)\delete.obj" \
	"$(INTDIR)\dialog.obj" \
	"$(INTDIR)\dirinfo.obj" \
	"$(INTDIR)\dirmix.obj" \
	"$(INTDIR)\dizlist.obj" \
	"$(INTDIR)\DlgBuilder.obj" \
	"$(INTDIR)\dlgedit.obj" \
	"$(INTDIR)\DlgGuid.obj" \
	"$(INTDIR)\DList.obj" \
	"$(INTDIR)\drivemix.obj" \
	"$(INTDIR)\edit.obj" \
	"$(INTDIR)\editor.obj" \
	"$(INTDIR)\eject.obj" \
	"$(INTDIR)\elevation.obj" \
	"$(INTDIR)\execute.obj" \
	"$(INTDIR)\farexcpt.obj" \
	"$(INTDIR)\farqueue.obj" \
	"$(INTDIR)\farrtl.obj" \
	"$(INTDIR)\farwinapi.obj" \
	"$(INTDIR)\fileattr.obj" \
	"$(INTDIR)\fileedit.obj" \
	"$(INTDIR)\filefilter.obj" \
	"$(INTDIR)\filefilterparams.obj" \
	"$(INTDIR)\filelist.obj" \
	"$(INTDIR)\FileMasksProcessor.obj" \
	"$(INTDIR)\FileMasksWithExclude.obj" \
	"$(INTDIR)\fileowner.obj" \
	"$(INTDIR)\filepanels.obj" \
	"$(INTDIR)\filestr.obj" \
	"$(INTDIR)\filetype.obj" \
	"$(INTDIR)\fileview.obj" \
	"$(INTDIR)\findfile.obj" \
	"$(INTDIR)\flink.obj" \
	"$(INTDIR)\flmodes.obj" \
	"$(INTDIR)\flplugin.obj" \
	"$(INTDIR)\flshow.obj" \
	"$(INTDIR)\flupdate.obj" \
	"$(INTDIR)\fnparce.obj" \
	"$(INTDIR)\format.obj" \
	"$(INTDIR)\foldtree.obj" \
	"$(INTDIR)\frame.obj" \
	"$(INTDIR)\global.obj" \
	"$(INTDIR)\grabber.obj" \
	"$(INTDIR)\headers.obj" \
	"$(INTDIR)\help.obj" \
	"$(INTDIR)\hilight.obj" \
	"$(INTDIR)\history.obj" \
	"$(INTDIR)\hmenu.obj" \
	"$(INTDIR)\hotplug.obj" \
	"$(INTDIR)\imports.obj"\
	"$(INTDIR)\infolist.obj" \
	"$(INTDIR)\interf.obj" \
	"$(INTDIR)\keybar.obj" \
	"$(INTDIR)\keyboard.obj" \
	"$(INTDIR)\language.obj" \
	"$(INTDIR)\local.obj" \
	"$(INTDIR)\localOEM.obj" \
	"$(INTDIR)\lockscrn.obj" \
	"$(INTDIR)\macro.obj" \
	"$(INTDIR)\main.obj" \
	"$(INTDIR)\manager.obj" \
	"$(INTDIR)\menubar.obj" \
	"$(INTDIR)\message.obj" \
	"$(INTDIR)\mix.obj" \
	"$(INTDIR)\mkdir.obj" \
	"$(INTDIR)\modal.obj" \
	"$(INTDIR)\namelist.obj" \
	"$(INTDIR)\network.obj" \
	"$(INTDIR)\options.obj" \
	"$(INTDIR)\palette.obj" \
	"$(INTDIR)\panel.obj" \
	"$(INTDIR)\panelmix.obj" \
	"$(INTDIR)\pathmix.obj" \
	"$(INTDIR)\plist.obj" \
	"$(INTDIR)\plognmn.obj" \
	"$(INTDIR)\plugapi.obj" \
	"$(INTDIR)\PluginA.obj" \
	"$(INTDIR)\plugins.obj" \
	"$(INTDIR)\PluginW.obj" \
	"$(INTDIR)\poscache.obj" \
	"$(INTDIR)\print.obj" \
	"$(INTDIR)\privilege.obj" \
	"$(INTDIR)\processname.obj" \
	"$(INTDIR)\qview.obj" \
	"$(INTDIR)\rdrwdsk.obj" \
	"$(INTDIR)\RefreshFrameManager.obj" \
	"$(INTDIR)\RegExp.obj" \
	"$(INTDIR)\registry.obj" \
	"$(INTDIR)\savefpos.obj" \
	"$(INTDIR)\savescr.obj" \
	"$(INTDIR)\scantree.obj" \
	"$(INTDIR)\scrbuf.obj" \
	"$(INTDIR)\scrobj.obj" \
	"$(INTDIR)\scrsaver.obj" \
	"$(INTDIR)\setattr.obj" \
	"$(INTDIR)\setcolor.obj" \
	"$(INTDIR)\shortcuts.obj" \
	"$(INTDIR)\stddlg.obj" \
	"$(INTDIR)\strmix.obj" \
	"$(INTDIR)\synchro.obj" \
	"$(INTDIR)\macrocompiler.obj" \
	"$(INTDIR)\syslog.obj" \
	"$(INTDIR)\TaskBar.obj" \
	"$(INTDIR)\TPreRedrawFunc.obj" \
	"$(INTDIR)\treelist.obj" \
	"$(INTDIR)\tvar.obj" \
	"$(INTDIR)\udlist.obj" \
	"$(INTDIR)\UnicodeString.obj" \
	"$(INTDIR)\usermenu.obj" \
	"$(INTDIR)\viewer.obj" \
	"$(INTDIR)\vmenu.obj" \
	"$(INTDIR)\window.obj" \
	"$(INTDIR)\xlat.obj" \
!if defined(X86)
!if !defined(DISABLE_WOW64_HOOK)
	"$(INTDIR)\hook_wow64.obj" \
!endif
!if "$(VC)"=="10"
!ifndef LINK_ULINK
	"$(INTDIR)\vc10.obj"
!else
	"$(INTDIR)\vc10u.obj"
!endif
!endif
!endif

UCD_OBJS=\
	"$(INTDIR)\prmem.obj" \
	"$(INTDIR)\CharDistribution.obj" \
	"$(INTDIR)\JpCntx.obj" \
	"$(INTDIR)\LangBulgarianModel.obj" \
	"$(INTDIR)\LangCyrillicModel.obj" \
	"$(INTDIR)\LangGreekModel.obj" \
	"$(INTDIR)\LangHebrewModel.obj" \
	"$(INTDIR)\LangHungarianModel.obj" \
	"$(INTDIR)\LangThaiModel.obj" \
	"$(INTDIR)\nsBig5Prober.obj" \
	"$(INTDIR)\nsCharSetProber.obj" \
	"$(INTDIR)\nsEscCharsetProber.obj" \
	"$(INTDIR)\nsEscSM.obj" \
	"$(INTDIR)\nsEUCJPProber.obj" \
	"$(INTDIR)\nsEUCKRProber.obj" \
	"$(INTDIR)\nsEUCTWProber.obj" \
	"$(INTDIR)\nsGB2312Prober.obj" \
	"$(INTDIR)\nsHebrewProber.obj" \
	"$(INTDIR)\nsLatin1Prober.obj" \
	"$(INTDIR)\nsMBCSGroupProber.obj" \
	"$(INTDIR)\nsMBCSSM.obj" \
	"$(INTDIR)\nsSBCharSetProber.obj" \
	"$(INTDIR)\nsSBCSGroupProber.obj" \
	"$(INTDIR)\nsSJISProber.obj" \
	"$(INTDIR)\nsUniversalDetector.obj" \
	"$(INTDIR)\nsUTF8Prober.obj"

LINK_LIBS=kernel32.lib user32.lib winspool.lib advapi32.lib shell32.lib mpr.lib ole32.lib psapi.lib secur32.lib setupapi.lib

DEFINES=\
	/D "UNICODE"\
	/D "_UNICODE"\
	/D "$(USEDEBUG)"\
!if defined(DEBUG) || defined(EXCEPTION_TEST)
	/D "FAR_ALPHA_VERSION"\
!endif
!ifdef DEBUG
	/D "SYSLOG"\
	/D "SYSLOG_FARSYSLOG"\
!endif
	/D "_CRT_SECURE_NO_WARNINGS"\
	/D "_CRT_NON_CONFORMING_SWPRINTFS"

!ifdef X86
MINVER=,5.0
!endif

DISABLED_WARNINGS=/wd4054 /wd4061 /wd4100 /wd4127 /wd4191 /wd4242 /wd4244 /wd4245 /wd4255 /wd4365 /wd4512 /wd4514 /wd4625 /wd4626 /wd4640 /wd4668 /wd4706 /wd4710 /wd4711 /wd4738 /wd4820 /wd4917

# common
CPPFLAGS=/nologo $(MP) /Wall $(DISABLED_WARNINGS) $(FARSYSLOG) /EHs-c- $(DEFINES) /GS- /GR- /Gy /GF /Fo"$(INTDIR)\\" /Fd"$(INTDIR)\\" /J /c
LINKFLAGS=/nologo /subsystem:console$(MINVER) /release /nxcompat /largeaddressaware /dynamicbase /def:"$(DEF_FILE)" /map:"$(OUTDIR)\far.map" /pdb:"$(OUTDIR)\far.pdb" /out:"$(OUTDIR)\Far.exe"
ULINKFLAGS=-q -m- -ap -Gz -O- -o- -Gh -Gh- -GF:LARGEADDRESSAWARE -d*kernel32
RFLAGS=/D__FARBIT__=$(DIRBIT) /l 0x409 /fo"$(RES_FILE)" /d $(USEDEBUG)

# config-cpecific
!ifdef DEBUG
CPPFLAGS=$(CPPFLAGS) /MTd /Od /Zi
LINKFLAGS=$(LINKFLAGS) /debug
ULINKFLAGS=$(ULINKFLAGS) -v
!else
CPPFLAGS=$(CPPFLAGS) /MT /O2
!ifndef NO_RELEASE_PDB
CPPFLAGS=$(CPPFLAGS) /Zi
LINKFLAGS=$(LINKFLAGS) /debug
!endif
LINKFLAGS=$(LINKFLAGS) /incremental:no /OPT:REF /OPT:ICF
!endif
!ifdef ASM_LISTING
CPPFLAGS=$(CPPFLAGS) /FAcs /Fa"$(CODDIR)\\"
!endif

# platform-cpecific
!ifdef X86
CPPFLAGS=$(CPPFLAGS) /Zp4
!ifndef DEBUG
CPPFLAGS=$(CPPFLAGS) /Oy-
!endif
LINKFLAGS=$(LINKFLAGS) /machine:i386
!elseifdef AMD64
CPPFLAGS=$(CPPFLAGS) /Zp8
LINKFLAGS=$(LINKFLAGS) /machine:amd64
ULINKFLAGS=$(ULINKFLAGS) -Tpe+
!elseifdef IA64
CPPFLAGS=$(CPPFLAGS) /Zp8
LINKFLAGS=$(LINKFLAGS) /machine:IA64
!endif

# compiler-cpecific
!if "$(VC)"=="8"
CPPFLAGS=$(CPPFLAGS) /Wp64
LINKFLAGS=$(LINKFLAGS) /opt:nowin98
!else
RFLAGS=$(RFLAGS) /nologo
!endif

ALL: AllDirs lng depfile
	$(MAKE) /nologo /f makefile_vc build USEDEPS=1

.PHONY: lng
lng: bootstrap\farlang.templ
	echo generating language files
	tools\lng.generator.exe -nc -i bootstrap\lang.ini -ol "$(OUTDIR)" bootstrap\farlang.templ

.PHONY: depfile
depfile:
	$(GAWK) -f .\scripts\mkdep.awk mkdep.list > $(DEPFILE)

.PHONY: build
build: "$(OUTDIR)\Far.exe" "$(OUTDIR)\FarEng.hlf" "$(OUTDIR)\FarRus.hlf" "$(OUTDIR)\FarHun.hlf" "$(OUTDIR)\File_id.diz" "$(FARINCLUDE)\PluginW.pas" "$(FARINCLUDE)\FarColorW.pas" "$(FARINCLUDE)\FarKeysW.pas" "$(FARINCLUDE)\farcolor.hpp" "$(FARINCLUDE)\farkeys.hpp" "$(FARINCLUDE)\plugin.hpp"

.PHONY: AllDirs
AllDirs:
	if not exist "bootstrap" mkdir "bootstrap"
	if not exist "$(OUTDIR)\" mkdir "$(OUTDIR)"
	if not exist "$(FARINCLUDE)\" mkdir "$(FARINCLUDE)"
	if not exist "$(INTDIR)\" mkdir "$(INTDIR)"
!ifdef ASM_LISTING
	if not exist "$(CODDIR)\" mkdir "$(CODDIR)"
!endif

"$(OUTDIR)\Far.exe": $(DEF_FILE) $(PCH_FILE) $(LINK_OBJS) $(UCD_OBJS) $(RES_FILE) bootstrap\Far.exe.manifest bootstrap\far.rc bootstrap\copyright.inc bootstrap\farversion.inc
	echo linking $@
!ifndef LINK_ULINK
	$(LINK) @<<
	$(LINKFLAGS) $(LINK_OBJS) $(UCD_OBJS) $(RES_FILE) $(LINK_LIBS)
<<
!else
	$(ULINK) +- @+<<
	$(ULINKFLAGS) $(LINK_OBJS) $(UCD_OBJS)
	,"$(OUTDIR)\Far.exe","$(OUTDIR)\Far.map"
	,$(LINK_LIBS)
	,"$(DEF_FILE)","$(RES_FILE)"
<<
!endif

$(PCH_FILE): headers.cpp headers.hpp
	echo making precompiled headers
	$(CPP) $(CPPFLAGS) headers.cpp /Yc /Fp"$(PCH_FILE)"

.c{$(INTDIR)}.obj::
	$(CPP) @<<
	$(CPPFLAGS) $<
<<

.cpp{$(INTDIR)}.obj::
	$(CPP) @<<
	$(CPPFLAGS) /Yuheaders.hpp /Fp"$(PCH_FILE)" $<
<<

.asm{$(INTDIR)}.obj:
	ml /nologo /c /Fo$@ $<

{UCD}.c{$(INTDIR)}.obj::
	$(CPP) @<<
	$(CPPFLAGS) $<
<<

{UCD}.cpp{$(INTDIR)}.obj::
	$(CPP) @<<
	$(CPPFLAGS) $<
<<

$(RES_FILE): bootstrap\far.rc res.hpp Far.ico
	echo compiling resource file
	$(RC) $(RFLAGS) bootstrap\far.rc

!ifdef USEDEPS
!include "$(DEPFILE)"
!endif

MSG=echo generating $@

bootstrap\copyright.inc: $(@F).m4 farversion.m4 tools.m4 vbuild.m4
	$(MSG)
	$(M4) $(@F).m4 | $(GAWK) -f .\scripts\enc.awk > $@

bootstrap\farversion.inc: $(@F).m4 farversion.m4 tools.m4 vbuild.m4
	$(MSG)
	$(M4) $(@F).m4 > $@

bootstrap\Far.exe.manifest: $(@F).m4 farversion.m4 tools.m4 vbuild.m4
	$(MSG)
	$(M4) $(@F).m4 > $@

bootstrap\far.rc: $(@F).m4 farversion.m4 tools.m4 vbuild.m4 bootstrap\Far.exe.manifest res.hpp
	$(MSG)
	$(M4) $(@F).m4 > $@

bootstrap\farlang.templ: $(@F).m4 farversion.m4 tools.m4 vbuild.m4
	$(MSG)
	$(M4) $(@F).m4 > $@

$(FARINCLUDE)\farcolor.hpp: colors.hpp farversion.m4 tools.m4 vbuild.m4
	$(MSG)
	$(M4) -DINPUT=colors.hpp headers.m4 > $@

$(FARINCLUDE)\farkeys.hpp: keys.hpp farversion.m4 tools.m4 vbuild.m4
	$(MSG)
	$(M4) -DINPUT=keys.hpp headers.m4 > $@

$(FARINCLUDE)\plugin.hpp: $(@F) farversion.m4 tools.m4 vbuild.m4
	$(MSG)
	$(M4) -DINPUT=$(@F) headers.m4 > $@

$(OUTDIR)\FarEng.hlf: $(@F).m4 farversion.m4 tools.m4 vbuild.m4
	$(MSG)
	$(GAWK) -f .\scripts\mkhlf.awk $(@F).m4 | $(M4) > $@

$(OUTDIR)\FarRus.hlf: $(@F).m4 farversion.m4 tools.m4 vbuild.m4
	$(MSG)
	$(GAWK) -f .\scripts\mkhlf.awk $(@F).m4 | $(M4) > $@

$(OUTDIR)\FarHun.hlf: $(@F).m4 farversion.m4 tools.m4 vbuild.m4
	$(MSG)
	$(GAWK) -f .\scripts\mkhlf.awk $(@F).m4 | $(M4) > $@

$(OUTDIR)\File_id.diz: $(@F).m4 farversion.m4 tools.m4 vbuild.m4
	$(MSG)
	$(M4) $(@F).m4 > $@

$(FARINCLUDE)\PluginW.pas: $(@F) farversion.m4 tools.m4 vbuild.m4
	$(MSG)
	$(M4) -DINPUT=$(@F) headers.m4 > $@

$(FARINCLUDE)\FarColorW.pas: $(@F) farversion.m4 tools.m4 vbuild.m4
	$(MSG)
	$(M4) -DINPUT=$(@F) headers.m4 > $@

$(FARINCLUDE)\FarKeysW.pas: $(@F) farversion.m4 tools.m4 vbuild.m4
	$(MSG)
	$(M4) -DINPUT=$(@F) headers.m4 > $@

.PHONY: CLEAN
CLEAN:
	echo cleaning
	for %%i in ("$(INTDIR)\*.*" "$(CODDIR)\*.*" "bootstrap\*.*" "$(OUTDIR)\Far.exe" "$(OUTDIR)\Far.exp" "$(OUTDIR)\Far.lib" "$(OUTDIR)\Far.map" "$(OUTDIR)\Far.pdb" "$(OUTDIR)\*.hlf" "$(OUTDIR)\*.lng" "$(OUTDIR)\File_id.diz") do @if exist %%i del /q /f %%i
