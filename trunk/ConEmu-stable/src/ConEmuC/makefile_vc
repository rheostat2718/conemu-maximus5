
.SILENT:

NAME=ConEmuC
DIRNAME=$(NAME)
RELEASEDIR=..\..\Release\ConEmu

!include ../makefile_vc_defs

!if defined(AMD64)
OUTNAME=ConEmuC64
!elseif defined(IA64)
OUTNAME=ConEmuC64
!else
OUTNAME=ConEmuC
!endif

LINK=link.exe
ULINK=ulink.exe
M4=tools\m4 -P -DFARBIT=$(DIRBIT)
GAWK=tools\gawk

DEF_FILE = ".\$(NAME).def"

RES_FILE = "$(OBJDIR)\$(NAME).res"

#PCH_FILE = "$(OBJDIR)\headers.pch"

LINK_OBJS = $(OBJDIR)\ConEmuC.obj


LINK_LIBS=kernel32.lib user32.lib

DEFINES=\
	/DUNICODE \
	/D_UNICODE \
	/D$(USEDEBUG) \
	/DHIDE_TODO \
	/DCRTPRINTF \
	/D_CRT_SECURE_NO_WARNINGS \
	/D_CRT_NON_CONFORMING_SWPRINTFS \
	/DUSE_SEH

# common
CPPFLAGS=/nologo $(MP) /W3 $(FARSYSLOG) /EHs-c- $(DEFINES) /GS- /GR- /Gy /GF /Fo"$(OBJDIR)\\" /Fd"$(OBJDIR)\\" /J /c /FAcs /Fa"$(CODDIR)\\"
LINKFLAGS=/nologo /subsystem:console /def:"$(DEF_FILE)" /out:"$(OUTDIR)\$(OUTNAME).exe" /map:"$(OUTDIR)\$(OUTNAME).map" /RELEASE /nxcompat /NODEFAULTLIB /ENTRY:main /DEBUG /pdb:"$(OUTDIR)\$(OUTNAME).pdb"
ULINKFLAGS=-q -m- -ap -Gz -O- -o- -Gh -Gh-
RFLAGS=$(RCWIN64) /l 0x409 /fo"$(RES_FILE)" /d "SELF_MANIFEST" /d $(USEDEBUG)

# config-cpecific
!ifdef DEBUG
CPPFLAGS=$(CPPFLAGS) /MTd /Od /Zi
LINKFLAGS=$(LINKFLAGS)
ULINKFLAGS=$(ULINKFLAGS) -v
!else
CPPFLAGS=$(CPPFLAGS) /MT /O2 /Oy-
!ifndef NO_RELEASE_PDB
CPPFLAGS=$(CPPFLAGS) /Zi
LINKFLAGS=$(LINKFLAGS)
!endif
LINKFLAGS=$(LINKFLAGS) /incremental:no /OPT:REF /OPT:ICF
!endif

# platform-cpecific
!ifdef X86
CPPFLAGS=$(CPPFLAGS) /Zp4
LINKFLAGS=$(LINKFLAGS) /machine:i386
!elseifdef AMD64
CPPFLAGS=$(CPPFLAGS) /Zp8 /D_WIN64 /DWIN64
LINKFLAGS=$(LINKFLAGS) /machine:amd64
ULINKFLAGS=$(ULINKFLAGS) -Tpe+
!elseifdef IA64
CPPFLAGS=$(CPPFLAGS) /Zp8 /D_WIN64 /DWIN64
LINKFLAGS=$(LINKFLAGS) /machine:IA64
!endif

# compiler-cpecific
!if "$(VC)"=="8"
CPPFLAGS=$(CPPFLAGS) /Wp64
LINKFLAGS=$(LINKFLAGS) /opt:nowin98
!else
RFLAGS=$(RFLAGS) 
!endif

ALL: AllDirs build clean
#ALL: AllDirs lng depfile
#	$(MAKE) /nologo /f makefile_vc build USEDEPS=1

#.PHONY: lng
#lng: farlang.templ
#	echo generating language files
#	tools\lng.generator.exe -nc -i lang.ini -ol "$(OUTDIR)" farlang.templ

#.PHONY: depfile
#depfile:
#	$(GAWK) -f .\scripts\mkdep.awk mkdep.list > $(DEPFILE)

.PHONY: build
build: "$(OUTDIR)\$(OUTNAME).exe"

.PHONY: AllDirs
AllDirs:
	if not exist "$(OUTDIR)\" mkdir "$(OUTDIR)"
	if not exist "$(OBJDIR)\" mkdir "$(OBJDIR)"
	if not exist "$(CODDIR)\" mkdir "$(CODDIR)"

"$(OUTDIR)\$(OUTNAME).exe": $(DEF_FILE) $(LINK_OBJS) $(RES_FILE) $(NAME).exe.manifest $(NAME).rc
	echo linking $@
!ifndef LINK_ULINK
   @echo $(LINK) $(LINKFLAGS)
	$(LINK) @<<
	$(LINKFLAGS) $(LINK_OBJS) $(RES_FILE) $(LINK_LIBS)
<<
!else
	$(ULINK) +- @+<<
	$(ULINKFLAGS) $(LINK_OBJS)
	,"$(OUTDIR)\$(OUTNAME).exe","$(OUTDIR)\$(OUTNAME).map"
	,$(LINK_LIBS)
	,"$(DEF_FILE)","$(RES_FILE)"
<<
!endif

#$(PCH_FILE): headers.cpp headers.hpp
#	echo making precompiled headers
#	$(CPP) $(CPPFLAGS) headers.cpp /Yc /Fp"$(PCH_FILE)"

#.c{$(OBJDIR)}.obj::
#	$(CPP) @<<
#	$(CPPFLAGS) $<
#<<

.cpp{$(OBJDIR)}.obj::
	$(CPP) @<<
	$(CPPFLAGS) $<
<<

{../common/}.cpp{$(OBJDIR)}.obj::
	$(CPP) @<<
	$(CPPFLAGS) $<
<<

{../ConEmuPlugin/}.cpp{$(OBJDIR)}.obj::
	$(CPP) @<<
	$(CPPFLAGS) $<
<<

#{UCD}.c{$(OBJDIR)}.obj::
#	$(CPP) @<<
#	$(CPPFLAGS) $<
#<<

#{UCD}.cpp{$(OBJDIR)}.obj::
#	$(CPP) @<<
#	$(CPPFLAGS) $<
#<<

$(RES_FILE): $(NAME).rc ..\ConEmu\Version.h
	echo compiling resource file
	$(RC) $(RFLAGS) $(NAME).rc

#!ifdef USEDEPS
#!include "$(DEPFILE)"
#!endif

MSG=echo generating $@

#Far.exe.manifest: $@.m4 farversion.m4 tools.m4 vbuild.m4
#	$(MSG)
#	$(M4) $@.m4 > $@

#ConEmuC.rc: $@.m4 farversion.m4 tools.m4 vbuild.m4 Far.exe.manifest res.hpp
#	$(MSG)
#	$(M4) $@.m4 > $@

$(OBJDIR)\ConEmuC.obj: ConEmuC.cpp


.PHONY: CLEAN
CLEAN:
	@echo copying release files
	@if not exist "$(RELEASEDIR)\$(NULL)" mkdir "$(RELEASEDIR)"
	@move "$(OUTDIR)\$(OUTNAME).exe" $(RELEASEDIR)
	@move "$(OUTDIR)\$(OUTNAME).pdb" $(RELEASEDIR)
	@move "$(OUTDIR)\$(OUTNAME).map" $(RELEASEDIR)

