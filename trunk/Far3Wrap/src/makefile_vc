#The following variables can be set by the user:
#
#NAME - the name of the plugin (project name|dll name).
#
#EXT - extension of the plugin executable (dll by default).
#
#DOCS - a list of additional files that need to copied to the target folder.
#
#ADDOUTDIR - you can set it to /dir if the target folder for the plugin
#            is a folder inside the default target folder.
#            This is used in multiarc for building *.fmt.
#
#USERCPP - user defined switches for the compiler (added after the default
#          ones).
#
#CPP_UNALIGN - use 1byte alignment insead of 8bytes in 32bit compiling
#
#ADDOBJDIR - you can set it to /dir if the temporary folder for the plugin
#            compiled files is a folder inside the default temporary folder.
#            This is used in ftp for building *.fll.
#
#DEF_NAME - name of DEF-file (maybe with path, but always without extension).
#           If unspecifiedn used $(NAME).
#           This is used in ftp for building *.fll.
#
#RC_NAME  - name of RC-file (maybe with path, but always without extension).
#           If unspecifiedn used $(NAME).
#           This is used in ftp for building *.fll.
#
#LINK_OBJS - a list of target *.obj files
#
#LINK_DEP - additional dependents for link rule (e.g. prebuild library)
#
#DEBUG - set if a debug build is needed
#
#WIDE - set for a unicode build
#
#ULINK - set if you want to use ulink for linking
#
#NEEDENTRY - set if you want to disable the /noentry link flag
#
#NEEDDEFLIB - set if you want to disable the /nodefaultlib link flag
#
#EXCLUDECRT - set if you do not want to link with common/crt lib.
#
#AMD64 - set for x64 build
#  or
#CPU=AMD64 - for x64 build
#
#IA64 - set for IA64 build
#  or
#CPU=IA64 - for IA64 build
#
#VC8 - set to build with VC8, VC9 intended by default
#



DEF_NAME = Loader

NEEDENTRY=
#!undef DEBUG

!if defined(AMD64) || "$(CPU)" == "AMD64"
OUTNAME = Loader64
RCWIN64=/D_WIN64 /DWIN64
!else
OUTNAME = Loader
RCWIN64=
!endif                   

NAME = Loader

LINK_OBJS = $(OBJDIR)\Loader.obj

#$(OBJDIR)\LogBrowser.obj

USERLIBS = Rpcrt4.lib


!if defined(AMD64) || "$(CPU)" == "AMD64"
!undef AMD64
!undef CPU
AMD64=1
CPU=AMD64
!elseif defined(IA64) || "$(CPU)" == "IA64"
!undef IA64
!undef CPU
IA64=1
CPU=IA64
!endif

RC_NAME=Loader

!if defined(DEBUG)
DIRNAME=debug
!else
DIRNAME=final
!endif                   

!ifdef WIDE
DIRSUFF = W
!endif


RELEASEDIR=..

!ifdef AMD64
DIRBIT = 64
!else
DIRBIT = 32
!endif
WORKDIR = $(DIRNAME).$(DIRBIT)$(DIRSUFF).vc
!ifdef INSTALL
OUTDIR=$(INSTALL)
!else
OUTDIR=$(WORKDIR)
!endif


OBJDIR = $(WORKDIR)\obj$(ADDOBJDIR)
#COMMON = ..
COMINC = ..
CPP_WIDE = /DUNICODE /D_UNICODE
RC_WIDE = /dUNICODE
EXT = dll
#DLLNAME = $(OUTNAME).$(EXT)
#DLLFULLNAME = $(OUTDIR)$(ADDOUTDIR)\$(DLLNAME)
DLL_FULL = $(OUTDIR)$(ADDOUTDIR)\$(OUTNAME).$(EXT)
DLL_ARC = $(OUTDIR)$(ADDOUTDIR)\$(OUTNAME)_ARC.$(EXT)
DLL_CUSTOM = $(OUTDIR)$(ADDOUTDIR)\$(OUTNAME)_CUSTOM.$(EXT)
DLL_DIALOG = $(OUTDIR)$(ADDOUTDIR)\$(OUTNAME)_DIALOG.$(EXT)
DLL_EDITOR = $(OUTDIR)$(ADDOUTDIR)\$(OUTNAME)_EDITOR.$(EXT)
DLL_FINDLIST = $(OUTDIR)$(ADDOUTDIR)\$(OUTNAME)_FINDLIST.$(EXT)
DLL_VIEWER = $(OUTDIR)$(ADDOUTDIR)\$(OUTNAME)_VIEWER.$(EXT)
DLL_WINDOW = $(OUTDIR)$(ADDOUTDIR)\$(OUTNAME)_WINDOW.$(EXT)
#DEF = $(DEF_NAME).def
#MAP = $(OUTDIR)$(ADDOUTDIR)\$(OUTNAME).map
#PDBNAME = $(OUTNAME).pdb
PDB = $(OUTDIR)$(ADDOUTDIR)\ldr.pdb
PDB_FULL = /pdb:"$(OUTDIR)$(ADDOUTDIR)\$(OUTNAME).pdb"
PDB_ARC = /pdb:"$(OUTDIR)$(ADDOUTDIR)\$(OUTNAME)_ARC.pdb"
PDB_CUSTOM = /pdb:"$(OUTDIR)$(ADDOUTDIR)\$(OUTNAME)_CUSTOM.pdb"
PDB_DIALOG = /pdb:"$(OUTDIR)$(ADDOUTDIR)\$(OUTNAME)_DIALOG.pdb"
PDB_EDITOR = /pdb:"$(OUTDIR)$(ADDOUTDIR)\$(OUTNAME)_EDITOR.pdb"
PDB_FINDLIST = /pdb:"$(OUTDIR)$(ADDOUTDIR)\$(OUTNAME)_FINDLIST.pdb"
PDB_VIEWER = /pdb:"$(OUTDIR)$(ADDOUTDIR)\$(OUTNAME)_VIEWER.pdb"
PDB_WINDOW = /pdb:"$(OUTDIR)$(ADDOUTDIR)\$(OUTNAME)_WINDOW.pdb"
RES = $(OBJDIR)\$(NAME).res

!ifdef VC8
COMPAT64=/Wp64
NOWIN98=/OPT:NOWIN98
!endif


!if defined(DEBUG)
CPP_OPT=/DDEBUG /O1 /Fd$(PDB) /DCRTSTARTUP
LINK_DEBUG=/debug 
#/map:"$(MAP)"
#/pdb:"$(PDB)"
CPP_DEBUG=/Zi
!else
CPP_OPT=/DNDEBUG /O1i /Fd$(PDB) /DHIDE_TODO /DCRTSTARTUP
LINK_DEBUG=
#/map:"$(MAP)" 
CPP_DEBUG=
!endif

!ifdef AMD64
CPP_PROJ_NO=/nologo /c /W3 /wd4995 /Gy /GF /Zp8 /J $(COMPAT64) /GS- /Gr /GR- /EHs-c- /LD /I"$(COMINC)" $(ENV_INC_OPT) $(CPP_WIDE) /D_CRT_SECURE_NO_WARNINGS /D_CRT_NONSTDC_NO_WARNINGS /D_CRT_NON_CONFORMING_SWPRINTFS /D_WIN32_WINNT=0x0500 $(USERCPP)
COMMONLIB = ..\libCRT64.lib
ULOUT=-Tpd+
LINK_MACHINE = /MACHINE:X64
!elseif defined(IA64)
CPP_PROJ_NO=/nologo /c /W3 /wd4995 /Gy /GF /Zp8 /J $(COMPAT64) /GS- /Gr /GR- /EHs-c- /LD /I"$(COMINC)" $(ENV_INC_OPT) $(CPP_WIDE) /D_CRT_SECURE_NO_WARNINGS /D_CRT_NONSTDC_NO_WARNINGS /D_CRT_NON_CONFORMING_SWPRINTFS /D_WIN32_WINNT=0x0500 $(USERCPP)
COMMONLIB = ..\libCRTIA64.lib
ULOUT=-Tpd+
LINK_MACHINE = /MACHINE:X64
!else
COMMONLIB = ..\libCRT.lib
#../pvdCRT.lib
!ifdef CPP_UNALIGN
CPP_ALIGN=/Zp1
!endif
# /I"$(COMMON)"
CPP_PROJ_NO=/nologo /c /W3 /wd4995 /Gy /GF $(CPP_ALIGN) /J /Gr /GS- /GR- /EHs-c- /LD /I"$(COMINC)" $(ENV_INC_OPT) $(CPP_WIDE) /D_CRT_SECURE_NO_WARNINGS /D_CRT_NONSTDC_NO_WARNINGS /D_CRT_NON_CONFORMING_SWPRINTFS /D_WIN32_WINNT=0x0500 $(USERCPP)
ULOUT=-Tpd -Re
LINK_MACHINE = /MACHINE:X86
!endif
CPP_PROJ=$(CPP_PROJ_NO) /Fo"$(OBJDIR)\\"

#!ifdef EXCLUDECRT
#!undef COMMONLIB
#!endif
LIBS = $(COMMONLIB) chkstk.obj kernel32.lib user32.lib gdi32.lib advapi32.lib shell32.lib ole32.lib uuid.lib mpr.lib version.lib oleaut32.lib wbemuuid.lib $(USERLIBS)

!ifdef _BIN_PATH_
!ifndef _CL_PATH_
_CL_PATH_=$(_BIN_PATH_)
!endif
!ifndef _RC_PATH_
_RC_PATH_=$(_BIN_PATH_)
!endif
!ifndef _LINK_PATH_
_LINK_PATH_=$(_BIN_PATH_)
!endif
!endif


LNK=$(_LINK_PATH_)link.exe
LINK_FLAGS=/nologo /SUBSYSTEM:WINDOWS /DYNAMICBASE /dll /RELEASE $(LINK_MACHINE) $(NOWIN98) $(ENV_LIB_OPT) $(LINK_DEBUG) /NODEFAULTLIB /MAP
#/def:"$(DEF)"  /out:"$(DLLFULLNAME)"
#LINK_FLAGS=/DEBUG /DEF:"export.def" /DLL /DYNAMICBASE /INCREMENTAL:NO /LTCG /MACHINE:X86 /MAP /NODEFAULTLIB /SUBSYSTEM:WINDOWS /OUT:"$(DLLFULLNAME)"




CFLAGS_NO = $(MP) $(CPP_PROJ_NO) $(CPP_DEBUG) $(CPP_OPT)
CFLAGS = $(MP) $(CPP_PROJ) $(CPP_DEBUG) $(CPP_OPT)

!ifndef CC
CC=$(_CL_PATH_)cl.exe
!endif

!ifndef LIBR
LIBR=$(_LINK_PATH_)lib.exe
!endif

!ifndef RC
RC=$(_RC_PATH)rc.exe
!endif

!if !defined(SRC_PATHS_DEFINED) && defined(__MAKE__)
SRC_PATHS=.;..\common
.path.cpp=$(SRC_PATHS)
.path.c=$(SRC_PATHS)
.path.hpp=$(SRC_PATHS)
.path.h=$(SRC_PATHS)
.path.rc=$(SRC_PATHS)
.path.def=$(SRC_PATHS)
!endif

#ALL: dirs $(INSTALL) $(DLL_FULL) $(DLL_ARC) $(DLL_CUSTOM) $(DLL_DIALOG) $(DLL_EDITOR) $(DLL_FINDLIST) $(DLL_VIEWER) $(DLL_WINDOW) clean
ALL: dirs $(INSTALL) $(DLL_FULL) clean

#Loader
#Loader_ARC
#Loader_CUSTOM
#Loader_DIALOG
#Loader_EDITOR
#Loader_FINDLIST
#Loader_VIEWER
#Loader_WIN

$(DLL_FULL) : $(LINK_OBJS) $(RES) $(LINK_DEP)
!ifndef __MAKE__
	@$(LNK) @<<
	$(LINK_FLAGS) $(LIBS) $(LINK_OBJS) $(RES) /def:"$(DEF_NAME).def" /out:"$(DLL_FULL)" $(PDB_FULL)
<<
!else
	$(LNK) $(LINK_FLAGS) $(LIBS) $(LINK_OBJS) $(RES) /def:"$(DEF_NAME).def" /out:"$(DLL_FULL)" $(PDB_FULL)
!endif

$(DLL_ARC) : $(LINK_OBJS) $(RES) $(LINK_DEP)
!ifndef __MAKE__
	@$(LNK) @<<
	$(LINK_FLAGS) $(LIBS) $(LINK_OBJS) $(RES) /def:"$(DEF_NAME)_ARC.def" /out:"$(DLL_ARC)" $(PDB_ARC)
<<
!else
	$(LNK) $(LINK_FLAGS) $(LIBS) $(LINK_OBJS) $(RES) /def:"$(DEF_NAME)_ARC.def" /out:"$(DLL_ARC)" $(PDB_ARC)
!endif

$(DLL_CUSTOM) : $(LINK_OBJS) $(RES) $(LINK_DEP)
!ifndef __MAKE__
	@$(LNK) @<<
	$(LINK_FLAGS) $(LIBS) $(LINK_OBJS) $(RES) /def:"$(DEF_NAME)_CUSTOM.def" /out:"$(DLL_CUSTOM)" $(PDB_CUSTOM)
<<
!else
	$(LNK) $(LINK_FLAGS) $(LIBS) $(LINK_OBJS) $(RES) /def:"$(DEF_NAME)_CUSTOM.def" /out:"$(DLL_CUSTOM)" $(PDB_CUSTOM)
!endif

$(DLL_DIALOG) : $(LINK_OBJS) $(RES) $(LINK_DEP)
!ifndef __MAKE__
	@$(LNK) @<<
	$(LINK_FLAGS) $(LIBS) $(LINK_OBJS) $(RES) /def:"$(DEF_NAME)_DIALOG.def" /out:"$(DLL_DIALOG)" $(PDB_DIALOG)
<<
!else
	$(LNK) $(LINK_FLAGS) $(LIBS) $(LINK_OBJS) $(RES) /def:"$(DEF_NAME)_DIALOG.def" /out:"$(DLL_DIALOG)" $(PDB_DIALOG)
!endif

$(DLL_EDITOR) : $(LINK_OBJS) $(RES) $(LINK_DEP)
!ifndef __MAKE__
	@$(LNK) @<<
	$(LINK_FLAGS) $(LIBS) $(LINK_OBJS) $(RES) /def:"$(DEF_NAME)_EDITOR.def" /out:"$(DLL_EDITOR)" $(PDB_EDITOR)
<<
!else
	$(LNK) $(LINK_FLAGS) $(LIBS) $(LINK_OBJS) $(RES) /def:"$(DEF_NAME)_EDITOR.def" /out:"$(DLL_EDITOR)" $(PDB_EDITOR)
!endif

$(DLL_FINDLIST) : $(LINK_OBJS) $(RES) $(LINK_DEP)
!ifndef __MAKE__
	@$(LNK) @<<
	$(LINK_FLAGS) $(LIBS) $(LINK_OBJS) $(RES) /def:"$(DEF_NAME)_FINDLIST.def" /out:"$(DLL_FINDLIST)" $(PDB_FINDLIST)
<<
!else
	$(LNK) $(LINK_FLAGS) $(LIBS) $(LINK_OBJS) $(RES) /def:"$(DEF_NAME)_FINDLIST.def" /out:"$(DLL_FINDLIST)" $(PDB_FINDLIST)
!endif


$(DLL_VIEWER) : $(LINK_OBJS) $(RES) $(LINK_DEP)
!ifndef __MAKE__
	@$(LNK) @<<
	$(LINK_FLAGS) $(LIBS) $(LINK_OBJS) $(RES) /def:"$(DEF_NAME)_VIEWER.def" /out:"$(DLL_VIEWER)" $(PDB_VIEWER)
<<
!else
	$(LNK) $(LINK_FLAGS) $(LIBS) $(LINK_OBJS) $(RES) /def:"$(DEF_NAME)_VIEWER.def" /out:"$(DLL_VIEWER)" $(PDB_VIEWER)
!endif

$(DLL_WINDOW) : $(LINK_OBJS) $(RES) $(LINK_DEP)
!ifndef __MAKE__
	@$(LNK) @<<
	$(LINK_FLAGS) $(LIBS) $(LINK_OBJS) $(RES) /def:"$(DEF_NAME)_WINDOW.def" /out:"$(DLL_WINDOW)" $(PDB_WINDOW)
<<
!else
	$(LNK) $(LINK_FLAGS) $(LIBS) $(LINK_OBJS) $(RES) /def:"$(DEF_NAME)_WINDOW.def" /out:"$(DLL_WINDOW)" $(PDB_WINDOW)
!endif


!ifndef __MAKE__
.cpp{$(OBJDIR)}.obj::
	@$(CC) @<<
	$(CFLAGS) $<
<<
{../common/}.cpp{$(OBJDIR)}.obj::
	$(CC) @<<
	$(CFLAGS) $<
<<
!else
.cpp{$(OBJDIR)}.obj:
	@$(CC) $(CFLAGS) { $< } 

{../common/}.cpp{$(OBJDIR)}.obj:
	@$(CC) $(CFLAGS) { $< } 

!endif

$(RES): $(RC_NAME).rc
	@$(RC) /I"$(COMINC)" $(ENV_INC_OPT) $(RCWIN64) $(RC_WIDE) /fo"$(RES)" $(RC_NAME).rc

.PHONY: dirs
dirs:
!ifdef INSTALL
	@if not exist "$(WORKDIR)\$(NULL)" mkdir "$(WORKDIR)"
!endif
	@if not exist "$(OBJDIR)\$(NULL)" mkdir "$(OBJDIR)"
	@if not exist "$(OUTDIR)\$(NULL)" mkdir "$(OUTDIR)"
	@if not exist "$(OUTDIR)$(ADDOUTDIR)\$(NULL)" mkdir "$(OUTDIR)$(ADDOUTDIR)"

.PHONY: clean
clean:
	@echo copying release files
	@if not exist "$(RELEASEDIR)\$(NULL)" mkdir "$(RELEASEDIR)"
	@del $(OUTDIR)$(ADDOUTDIR)\*.exp
	@del $(OUTDIR)$(ADDOUTDIR)\*.lib
	@del $(OUTDIR)$(ADDOUTDIR)\ldr.pdb
	@move $(OUTDIR)$(ADDOUTDIR)\*.* $(RELEASEDIR) > nul
!if !defined(DEBUG)
	@if exist $(RELEASEDIR)\$(OUTNAME)*.pdb del $(RELEASEDIR)\$(OUTNAME)*.pdb > nul
!endif
	@rd /Q /S $(OUTDIR) > nul
	@echo All done
	@echo .

#	echo final cleaning
#	del /Q $(OBJDIR)\*.*
#	rd $(OBJDIR)
#	del /Q $(OUTDIR)$(ADDOUTDIR)\*.*
#	rd $(OUTDIR)$(ADDOUTDIR)

$(OBJDIR)\Loader.obj: Loader.cpp
