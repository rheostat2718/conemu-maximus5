#The following variables can be set by the user:
#
#DEBUG - set if a debug build is needed
#
#LINK_ULINK - set if you want to use ulink for linking
#
#VC - set Visual C++ version (VC=8 - 2005, VC=9 - 2008, VC=10 - 2010) (we try to autodetect if not set)
#
#AMD64 - set for x64 build
#  or
#CPU=AMD64 - for x64 build
#
#IA64 - set for IA64 build
#  or
#CPU=IA64 - for IA64 build
#
#(we try to autodetect if not set)
#
#
#FARSYSLOG - for syslog
#
#DISABLE_WOW64_HOOK - set to disable the wow64 hook
#
#DEFFILE - name of user file to include
#
#EXCEPTION_TEST - set to generate Ctrl-Alt-Apps dialog in release
#
#NO_RELEASE_PDB - set to disable pdb generation for release
#

.SILENT:

#include for user defines if needed
!ifdef DEFFILE
!include $(DEFFILE)
!endif

NAME = ConEmuC
RELEASEDIR=Release\ConEmu

!if defined(AMD64) || "$(CPU)" == "AMD64" || "$(PLATFORM)" == "x64"
!undef CPU
AMD64=1
DIRBIT=64
RCWIN64=/D_WIN64 /DWIN64
OUTNAME=ConEmuC64
!elseif defined(IA64) || "$(CPU)" == "IA64" || "$(PLATFORM)" == "Itanium"
!undef CPU
IA64=1
DIRBIT=IA64
RCWIN64=/D_WIN64 /DWIN64
OUTNAME=ConEmuC64
!else
X86=1
DIRBIT=32
RCWIN64=
OUTNAME=ConEmuC
!endif

!if !defined(VC) && defined(_NMAKE_VER)

!if "$(_NMAKE_VER)">"9"
VC=9
!elseif "$(_NMAKE_VER)">"8"
VC=8
!elseif "$(_NMAKE_VER)">"10"
VC=10
!else
#default
VC=9
!endif
!endif

!ifndef DEBUG
DIRNAME=Release
USEDEBUG=NDEBUG
!else
DIRNAME=Debug
USEDEBUG=_DEBUG
!endif

#DEPFILE=far.vc.dep

OUTDIR=$(DIRNAME).$(DIRBIT).vc

#FARINCLUDE=Include

LINK=link.exe
ULINK=ulink.exe
M4=tools\m4 -P -DFARBIT=$(DIRBIT)
GAWK=tools\gawk

OBJDIR=$(OUTDIR)\obj
!ifdef FARSYSLOG
OBJDIR=$(OBJDIR)log
!endif

CODDIR=$(OUTDIR)\cod

DEF_FILE = ".\$(NAME).def"

RES_FILE = "$(OBJDIR)\$(NAME).res"

#PCH_FILE = "$(OBJDIR)\headers.pch"

LINK_OBJS = $(OBJDIR)\ConEmuC.obj


LINK_LIBS=kernel32.lib user32.lib

DEFINES=\
	/DUNICODE \
	/D_UNICODE \
	/D$(USEDEBUG) \
	/DHIDE_TODO \
	/DCRTPRINTF \
	/D_CRT_SECURE_NO_WARNINGS \
	/D_CRT_NON_CONFORMING_SWPRINTFS \
	/DUSE_SEH

# common
CPPFLAGS=/nologo $(MP) /W3 $(FARSYSLOG) /EHs-c- $(DEFINES) /GS- /GR- /Gy /GF /Fo"$(OBJDIR)\\" /Fd"$(OBJDIR)\\" /J /c /FAcs /Fa"$(CODDIR)\\"
LINKFLAGS=/nologo /subsystem:console /def:"$(DEF_FILE)" /out:"$(OUTDIR)\$(OUTNAME).exe" /map:"$(OUTDIR)\$(OUTNAME).map" /RELEASE /nxcompat /NODEFAULTLIB /ENTRY:main /DEBUG /pdb:"$(OUTDIR)\$(OUTNAME).pdb"
ULINKFLAGS=-q -m- -ap -Gz -O- -o- -Gh -Gh-
RFLAGS=$(RCWIN64) /l 0x409 /fo"$(RES_FILE)" /d "SELF_MANIFEST" /d $(USEDEBUG)

# config-cpecific
!ifdef DEBUG
CPPFLAGS=$(CPPFLAGS) /MTd /Od /Zi
LINKFLAGS=$(LINKFLAGS)
ULINKFLAGS=$(ULINKFLAGS) -v
!else
CPPFLAGS=$(CPPFLAGS) /MT /O2 /Oy-
!ifndef NO_RELEASE_PDB
CPPFLAGS=$(CPPFLAGS) /Zi
LINKFLAGS=$(LINKFLAGS)
!endif
LINKFLAGS=$(LINKFLAGS) /incremental:no /OPT:REF /OPT:ICF
!endif

# platform-cpecific
!ifdef X86
CPPFLAGS=$(CPPFLAGS) /Zp4
LINKFLAGS=$(LINKFLAGS) /machine:i386
!elseifdef AMD64
CPPFLAGS=$(CPPFLAGS) /Zp8 /D_WIN64 /DWIN64
LINKFLAGS=$(LINKFLAGS) /machine:amd64
ULINKFLAGS=$(ULINKFLAGS) -Tpe+
!elseifdef IA64
CPPFLAGS=$(CPPFLAGS) /Zp8 /D_WIN64 /DWIN64
LINKFLAGS=$(LINKFLAGS) /machine:IA64
!endif

# compiler-cpecific
!if "$(VC)"=="8"
CPPFLAGS=$(CPPFLAGS) /Wp64
LINKFLAGS=$(LINKFLAGS) /opt:nowin98
!else
RFLAGS=$(RFLAGS) 
!endif

ALL: AllDirs build clean
#ALL: AllDirs lng depfile
#	$(MAKE) /nologo /f makefile_vc build USEDEPS=1

#.PHONY: lng
#lng: farlang.templ
#	echo generating language files
#	tools\lng.generator.exe -nc -i lang.ini -ol "$(OUTDIR)" farlang.templ

#.PHONY: depfile
#depfile:
#	$(GAWK) -f .\scripts\mkdep.awk mkdep.list > $(DEPFILE)

.PHONY: build
build: "$(OUTDIR)\$(OUTNAME).exe"

.PHONY: AllDirs
AllDirs:
	if not exist "$(OUTDIR)\" mkdir "$(OUTDIR)"
	if not exist "$(OBJDIR)\" mkdir "$(OBJDIR)"
	if not exist "$(CODDIR)\" mkdir "$(CODDIR)"

"$(OUTDIR)\$(OUTNAME).exe": $(DEF_FILE) $(LINK_OBJS) $(RES_FILE) $(NAME).exe.manifest $(NAME).rc
	echo linking $@
!ifndef LINK_ULINK
	$(LINK) @<<
	$(LINKFLAGS) $(LINK_OBJS) $(RES_FILE) $(LINK_LIBS)
<<
!else
	$(ULINK) +- @+<<
	$(ULINKFLAGS) $(LINK_OBJS)
	,"$(OUTDIR)\$(OUTNAME).exe","$(OUTDIR)\$(OUTNAME).map"
	,$(LINK_LIBS)
	,"$(DEF_FILE)","$(RES_FILE)"
<<
!endif

#$(PCH_FILE): headers.cpp headers.hpp
#	echo making precompiled headers
#	$(CPP) $(CPPFLAGS) headers.cpp /Yc /Fp"$(PCH_FILE)"

#.c{$(OBJDIR)}.obj::
#	$(CPP) @<<
#	$(CPPFLAGS) $<
#<<

.cpp{$(OBJDIR)}.obj::
	$(CPP) @<<
	$(CPPFLAGS) $<
<<

{../common/}.cpp{$(OBJDIR)}.obj::
	$(CPP) @<<
	$(CPPFLAGS) $<
<<

{../ConEmuPlugin/}.cpp{$(OBJDIR)}.obj::
	$(CPP) @<<
	$(CPPFLAGS) $<
<<

#{UCD}.c{$(OBJDIR)}.obj::
#	$(CPP) @<<
#	$(CPPFLAGS) $<
#<<

#{UCD}.cpp{$(OBJDIR)}.obj::
#	$(CPP) @<<
#	$(CPPFLAGS) $<
#<<

$(RES_FILE): $(NAME).rc ..\ConEmu\Version.h
	echo compiling resource file
	$(RC) $(RFLAGS) $(NAME).rc

#!ifdef USEDEPS
#!include "$(DEPFILE)"
#!endif

MSG=echo generating $@

#Far.exe.manifest: $@.m4 farversion.m4 tools.m4 vbuild.m4
#	$(MSG)
#	$(M4) $@.m4 > $@

#ConEmuC.rc: $@.m4 farversion.m4 tools.m4 vbuild.m4 Far.exe.manifest res.hpp
#	$(MSG)
#	$(M4) $@.m4 > $@

$(OBJDIR)\ConEmuC.obj: ConEmuC.cpp


.PHONY: CLEAN
CLEAN:
	@echo copying release files
	@if not exist "..\..\$(RELEASEDIR)\$(NULL)" mkdir "..\..\$(RELEASEDIR)"
	@move "$(OUTDIR)\$(OUTNAME).exe" ..\..\$(RELEASEDIR)
	@move "$(OUTDIR)\$(OUTNAME).pdb" ..\..\$(RELEASEDIR)
	@move "$(OUTDIR)\$(OUTNAME).map" ..\..\$(RELEASEDIR)

#	@echo final cleaning
#	@del /Q $(CODDIR)\*.*
#	@del /Q $(OBJDIR)\*.*
#	@del /Q $(OUTDIR)\*.*
#	@rd $(CODDIR)
#	@rd $(OBJDIR)
#	@rd $(OUTDIR)
