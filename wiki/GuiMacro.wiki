There is an easy way to control (a little) !ConEmu window from console applications or additional hotkeys.
It's a !GuiMacro.

===Abstract===
You can execute !ConEmu GUI macro from command line (or batch file), i.e.:
{{{
"%ConEmuBaseDir%\ConEmuC.exe" /GUIMACRO WindowMinimize
}}}
Or, via Far Manager plugin (Far1/Far2/Far3 are supported):
{{{
F11 -> ConEmu -> Execute ConEmu macro
}}}
Also, you can use Far Manager macros to forward commands for !ConEmu GUI.
  * callplugin(0x43454D55,"!IsConEmu()") in the *Far2*
  * callplugin("4b675d80-1d4a-4ea9-8436-fdc23f2fc14b","!IsConEmu()") or Plugin.Call("4b675d80-1d4a-4ea9-8436-fdc23f2fc14b","!IsConEmu()") in the *Far3*


===Command line behaviour===
When GUI macro executed successfully, ConEmuC.exe set errorlevel to 0 and write result to !StdOut.

===Far plugin behaviour===
When you call plugin menu, result is show in the dialog field,

When you use far manager macro - result is placed to the '!ConEmuMacroResult' environment variable.

===List of functions===
<wiki:comment> !!! add same functions to "src\ConEmu\About.h" !!! </wiki:comment>
{{{
    FindEditor("<FullEditFileName>"),
    FindViewer("<FullViewerFileName>"),
    FindFarWindow(<WindowType>,"<WindowTitle>")
     - Returns "Found:<index of RealConsole>", "Blocked", or "NotFound"
       <WindowType> is number from Far Manager enum WINDOWINFO_TYPE
    FontSetName("<FontFaceName>"[,FontHeight[,FontWidth]])
     - Change font face name and (optionally) height/width.
    FontSetSize(Relative,N)
     - Change font height in the ConEmu window
       Relative==0: N - required font height in points
       Relative==1: N (+-1, +-2) - increase/decrease font height
       returns - "OK", or "InvalidArg"
    IsConEmu
     - Returns "Yes" when console was started under !ConEmu
    IsConsoleActive
     - Check, is RealConsole active or not, "Yes"/"No"
    IsRealVisible
     - Check, is RealConsole visible or not, "Yes"/"No"
    MsgBox("<Text>","<Title>",<ButtonType>)
     - Show modal GUI MessageBox, returns clicked button name
       ("Ok", "Cancel", "Retry", etc.),
       ButtonType (number) is from Windows SDK.
    Paste(<Cmd>[,"<Text>"])
     - When <Text> is omitted - paste from Windows clipboard,
       otherwise - paste specified text
       Cmd==0: paste all lines
       Cmd==1: paste first line
    Shell("<Verb>","<File>"[,"<Parms>"[,"<Dir>"[,<ShowCmd>]]])
     - Verb can be "open", "print" and so on, or special value "new_console",
       which starts File in the new tab of ConEmu window. Examples:
         Shell("open","cmd.exe","/k")
         Shell("","","cmd.exe /k -new_console:b"),
         Shell("new_console:b","","cmd.exe /k")
    Status(0[,<Parm>])
     - Show/Hide status bar, Parm=1 - Show, Parm=2 - Hide
    Status(1[,"<Text>"])
     - Set status bar text
    Tab(<Cmd>[,<Parm>])
     - Control ConEmu tabs
       Cmd==0 - show/hide tabs
       Cmd==1 - commit lazy changes
       Cmd==2 - switch next (eq. CtrlTab)
       Cmd==3 - switch prev (eq. CtrlShiftTab)
       Cmd==4 - switch tab direct (no recent mode), Parm=(1,-1)
       Cmd==5 - switch tab recent, Parm=(1,-1)
       Cmd==6 - switch console direct (no recent mode), Parm=(1,-1)
       Cmd==7 - activate console by number, Parm=(1-based console index)
       Cmd==8 - show tabs list menu (indiffirent Far/Not Far)
    WindowFullscreen()
     - Switch fullscreen window mode
       returns previous window mode
    WindowMaximize()
     - Switch maximized window mode
       returns previous window mode
    WindowMinimize() or WindowMinimize(1)
     - Minimize ConEmu window ("1" means "minimize to the TSA")
    WindowMode([\"<Mode>\"])\r\n" \
     - Returns or set current window mode
       "NOR", "MAX", "FS", "MIN", "TSA"
}}}

===Examples===
====Far2====
{{{
$if (callplugin(0x43454D55,"IsConEmu()")!=0 && env("ConEmuMacroResult")=="Yes")
  MsgBox("Macro", "Far started under ConEmu")
$end
}}}
====Far3====
{{{
$if (callplugin("4b675d80-1d4a-4ea9-8436-fdc23f2fc14b","IsConEmu()")!=0 && env("ConEmuMacroResult")=="Yes")
  MsgBox("Macro", "Far started under ConEmu")
$end
}}}
{{{
callplugin("4b675d80-1d4a-4ea9-8436-fdc23f2fc14b","shell(\"open\",\""+env("FARHOME")+"\\Encyclopedia\\FarEncyclopedia.ru.chm\")")
}}}
{{{
callplugin("4b675d80-1d4a-4ea9-8436-fdc23f2fc14b","shell(\"new_console\",\""+env("FARHOME")+"\\far.exe\")")
}}}
====Far1====
This is most complicated, cause of 'callplugin' absence in the Far 1.x
{{{
F11
$if (menu.Select("ConEmu",2)<=0) MsgBox("ConEmu","Plugin was not found in list!",1)
  $Exit
$end
Enter %r="";
$if (menu.select("~.",1)>0)
  ~ $Text "IsConEmu()" Enter %r=Dlg.GetValue(5,0);
$end
Esc
$if (%r=="Yes")
  MsgBox("Macro", "Far started under ConEmu")
$end
}}}

