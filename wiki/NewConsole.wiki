<font size="5">*-new_console and -cur_console switches*</font>
<wiki:toc max_depth="3" /> 

=Syntax=
When you run application from existing !ConEmu tab, or starting new tab from !ConEmu interface, you may use «-new_console» or «-cur_console» switches.

*Warning* «-new_console» and «-cur_console» are *case sensitive*.

{{{
  -new_console[:switches]
  or
  -cur_console[:switches]
     a - RunAs shell verb (as Admin on Vista+, user/pwd in Win2k and WinXP)
     b - create background tab
     c - force enable 'Press Enter or Esc to close console' (default)
     d:<dir> - specify working directory, MUST BE LAST or single OPTION
     f - force starting console active, useful when starting several consoles simultaneously
     h<height> - i.e., h0 - turn buffer off, h9999 - switch to 9999 lines
     i - don't inject ConEmuHk into starting process
     I - (GuiMacro only) forces inheriting of root process contents, like "Duplicate root" feature
     n - disable 'Press Enter or Esc to close console'
     o - don't enable 'Long console output' when starting command from Far Manager
     r - run as restricted user
     s[<SplitTab>T][<Percents>](H|V) - run new console in a split
     t:tabname - rename new created tab, MUST BE LAST or signle OPTION
     u - ConEmu choose user dialog
     u:<user>:<pwd> - specify user/pwd in args, MUST BE LAST or signle OPTION
}}}

*Note* These switches are shown in !ConEmu «About» dialog.

*Note* The «s» switch is complicated, look at examples below.

Btw, «-new_console» is one of the ways to start *GUI* application from existing tab in the new !ConEmu tab.

Several switches in one command may be used, «-new_console:b -new_console:h9999» and «-new_console:bh9999» are equal.

While you create new tab from !ConEmu GUI interface, «-new_console» and «-cur_console» have the same effect.

*Note* These are NOT a switches of ConEmuC, specify them as application (far, vim, putty, etc.) switches.

*Warning* Take into account «MUST BE LAST OPTION» comments. You can't use «u:...» and «d:...» together,
correct notation will be `"-new_console:d:c:\users\Pete" "-new_console:u:Pete:password"`.

*Warning* Option «Inject !ConEmuHk» must be enabled in !ConEmu settings!

==What is the difference between «-new_console» and «-cur_console»?==
«-new_console» always creates new tab in !ConEmu, while «-cur_console» not. So, some of switches used with «-cur_console» does not have any effect.

<wiki:comment>
==If you need to pass same name argument to console program==
Hm, in this really rare case (I have not know any program at that moment) you may use following form
{{{
program.exe -new_console:- -new_console «other arguments»
}}}
!ConEmu will strip "`-new_console:-`" and stop processing of command line, so real command will be executed
{{{
program.exe -new_console «other arguments»
}}}
</wiki:comment>

=Examples=

*Note*. In some cases «-new_console» can not be intercepted
(e.g. starting batches or internal commands from command processor itself).
In this cases you owe to use the «prefix» before actual command!

==Example 1==
Starts "`dir c:\ /s" in new background !ConEmu tab, set buffer height to 9999 lines, do not close tab after "dir" completion.
{{{
"%ConEmuBaseDir%\ConEmuC.exe" /c dir "-new_console:bh9999c" c:\ /s
}}}

==Example 2==
Starts "`vim.exe c:\sources\1.cpp`" in new !ConEmu tab, disable buffer scrolling (buffer height will be equal to window height), do not show 'Press Enter or Esc to close console' after exiting vim.
{{{
vim.exe -new_console:nh0 c:\sources\1.cpp
}}}

==Example 3==
Starts "`cmd.exe`" in specified directory with specified login/username (Nick) and password (pwd).
{{{
cmd.exe "-new_console:d:C:\Users\Nick" "-new_console:u:Nick:pwd"
}}}

==Example 4 (Far Manager related)==
Starts "`hiew.exe c:\tools\app.exe`" in *current* !ConEmu tab, do not enabling buffer scrolling (buffer height will be equal to window height).
{{{
hiew.exe -cur_console:h0 c:\tools\app.exe
}}}

==Example 5==
Starts PuTTY in new !ConEmu tab.
{{{
putty -new_console
}}}

==Example 6 (Split Screen)==
Split current tab, new tab will be created to the right, both tabs becomes 50% width of active tab.
{{{
cmd -new_console:s
}}}
or
{{{
cmd -new_console:s50H
}}}

Split current tab, create new tab to the bottom.
{{{
cmd -new_console:sV
}}}

Split 3-d tab, create new tab to the right with 30% width.
{{{
cmd -new_console:s3T30H
}}}

You may also create named task with several cmd's. Next example creates four cmd.exe consoles in a grid 2x2.
{{{
>cmd -cur_console:n
cmd -cur_console:s1TVn
cmd -cur_console:s1THn
cmd -cur_console:s2THn
}}}
